<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cfg.deploytools.mapper.TaskMapper">
    <resultMap id="BaseResultMap" type="com.cfg.deploytools.model.Task">
        <id column="id" property="taskId" jdbcType="INTEGER"/>
        <result column="project" property="projectId" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="openedBy" property="openedBy" jdbcType="VARCHAR"/>
        <result column="openedDate" property="openedDate" jdbcType="TIMESTAMP"/>
        <result column="finishedBy" property="finishedBy" jdbcType="VARCHAR"/>
        <result column="finishedDate" property="finishedDate" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="queryProjectIdByTaskId" parameterType="Integer" resultMap="BaseResultMap">
        select project from zt_task where id = #{taskId}
    </select>

    <update id="updateStatusForUpload">
        update zt_task
        set status = 'done', finishedDate = now(), assignedTo = 'liy', assignedDate = now(), finishedBy = #{finishedBy}
        where id = #{taskId}
    </update>

    <select id="getTaskListByProjectId" resultMap="BaseResultMap" parameterType="Integer">
        select t.id, t.project, t.name,
        t.status,
        t.openedBy, t.openedDate, t.finishedBy, t.finishedDate, t.assignedDate
        from
        zt_task t, cfg_taskstatus ts
        where
        t.project = #{projectId}
        and t.id not in(select task_id from cfg_taskstatus)
        UNION
        select t.id, t.project, t.name,
        ts.status,
        t.openedBy, t.openedDate, t.finishedBy, t.finishedDate ,t.assignedDate
        from
        zt_task t, cfg_taskstatus ts
        where
        t.project = #{projectId} and t.id = ts.task_id
        order by assignedDate desc
    </select>

    <select id="searchByCondition" resultMap="BaseResultMap">
        select t.id, t.project, t.name,t.status, t.openedBy, t.openedDate, t.finishedBy, t.finishedDate, t.assignedDate
        from zt_task t
        where
        <if test="status != null">
            t.status = #{status} and
        </if>
        <if test="taskId > 0">
            t.id = #{taskId} and
        </if>
        <if test="start != null">
            t.finishedDate &gt;= #{start} and
        </if>
        <if test="end != null">
            t.finishedDate &lt;= #{end} and
        </if>
        t.project = #{projectId} and
        t.id not in (select ts.task_id from cfg_taskstatus ts)
        union
        select t.id, t.project, t.name, ts.status, t.openedBy, t.openedDate, t.finishedBy, t.finishedDate,
        t.assignedDate
        from zt_task t, cfg_taskstatus ts
        where
        <if test="status != null">
            ts.status = #{status} and
        </if>
        <if test="taskId > 0">
            ts.task_id = #{taskId} and
        </if>
        <if test="start != null">
            t.finishedDate &gt;= #{start} and
        </if>
        <if test="end != null">
            t.finishedDate &lt;= #{end} and
        </if>
        ts.project_id = #{projectId} and t.id = ts.task_id
        GROUP BY t.name
        order by assignedDate desc
    </select>

    <!--<select id="getTaskListByProjectId" resultMap="BaseResultMap" parameterType="Integer">-->
    <!--    select id, project, name, status, openedBy, openedDate, finishedBy, finishedDate-->
    <!--    from zt_task-->
    <!--    where project = #{projectId}-->
    <!--    and id not in (-->
    <!--    select task_id from cfg_taskstatus-->
    <!--    )-->
    <!--    order by assignedDate desc-->
    <!--</select>-->

    <!--<select id="getTaskListByProjectId2" resultMap="BaseResultMap" parameterType="Integer">-->
    <!--    select t.id, t.project, t.name, t.openedBy, t.openedDate, t.finishedBy, t.finishedDate,-->
    <!--    ts.status, ts.task_id, ts.project_id-->
    <!--    from cfg_taskstatus ts, zt_task t-->
    <!--    where t.project = ts.project_id and ts.project_id = #{projectId} order by t.assignedDate desc-->
    <!--</select>-->

</mapper>